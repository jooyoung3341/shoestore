<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- Spring 프로젝트에서 MVC 관련 어노테이션을 사용할 수 있도록 해주는 설정 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적 파일들을 캐싱 해 줄 수 있는 디렉토리와 url 설정 -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- <resources mapping="/template/css/**" location="/resources/template/css/" />
	<resources mapping="/template/js/**" location="/resources/template/js/" /> -->

	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 실제 출력될 파일의 위치와 종류를 결정하는 설정
		   jsp와 name을 매핑시켜주는 설정 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 어노테이션이 적용된 클래스의 객체를 자동으로 만들어주는 패키지 설정 스프링 MVC 프로젝트에서 모든 클래스는 이 패키지 안에서 생성 domain 클래스를 제외하고는 전부 어노테이션을 이용해서 생성
	이 패키지에 있는 클래스들은 new 하지 않고 bean으로 생성하지도 않습니다. 
		kr.co.book 하위 모든 패키지에 있는 파일의 어노테이션을 스캔해서 빈으로 등록-->
	<context:component-scan base-package="kr.co.shoestore" />
	
	<!-- Controller가 처리하지 못하는 요청을 WAS가 처리하도록	하는 설정입니다.
	필수적으로 합니다. -->
	<default-servlet-handler/>
	
</beans:beans>
