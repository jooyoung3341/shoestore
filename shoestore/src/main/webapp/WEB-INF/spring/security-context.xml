<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


  	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />    

 	

	<!-- 시큐리티 표현식 사용 여부 -->
	<http auto-config="true" use-expressions="true">      
		<!-- 해당 URL에 접근하기 위한 권한 설정  use-expressions="true"-->
	<intercept-url pattern="/user/**" access="permitAll" />   
	<intercept-url pattern="/**" access="permitAll" />   
			<!-- <intercept-url pattern="/**" access="ROLE_USER" />    -->
		<intercept-url pattern="/resources/**" access="permitAll" /> 
		<!-- <intercept-url pattern="/**" access="hasRole('ROLE_USER')" />   -->
		
		<!-- 순서대로
			1. 로그인 페이지 / 2. 로그인 성공 시 이동할 페이지 / 3.4. 로그인 페이지 id,pw 담을 변수 이름 /5.로그인 실패 시 호출할 URL
			7. 						  -->
			<form-login login-page="/user/login"
				default-target-url="/"     
				username-parameter="id"         
				password-parameter="pw"
				authentication-failure-url="/login"  /> 
		 			
		 			
		<!-- max-sessions : 중복 로그인 가능한 세션 수 / expired-url="/login_duplicate -->
		<session-management>
			<concurrency-control max-sessions="1" />
		</session-management>
		<!-- 로그아웃 되면 세션 초기화 -->
	 <logout invalidate-session="true" logout-url="/logout"   logout-success-url="/" /> 
		<!-- enable csrf protection -->

		<!-- csrf를 통한 해킹을 막음??? -->
		<csrf />  
	</http> 
	

 		<context:component-scan base-package="kr.co.shoestore.mapper"/>



<authentication-manager>
	<authentication-provider ref="userAuthProvider"/>
		<authentication-provider user-service-ref="userServiceImpl">
		</authentication-provider>
	</authentication-manager>

<beans:bean id="userServiceImpl" class="kr.co.shoestore.service.impl.UserServiceImpl"/>
<beans:bean id="userAuthProvider" class="kr.co.shoestore.security.AuthenticationProvider"/>


   	 
</beans:beans>

